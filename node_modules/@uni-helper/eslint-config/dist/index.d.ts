import * as _antfu_eslint_config0 from "@antfu/eslint-config";
import { OptionsConfig as OptionsConfig$1, OptionsOverrides, OptionsOverrides as OptionsOverrides$1, TypedFlatConfigItem } from "@antfu/eslint-config";
import { Linter } from "eslint";
import { FlatConfigComposer } from "eslint-flat-config-utils";

//#region src/types.d.ts
type Awaitable<T> = T | Promise<T>;
interface OptionsUni extends OptionsOverrides$1 {}
interface OptionsUniJson extends OptionsOverrides$1 {}
interface OptionsConfig extends OptionsConfig$1 {
  uni?: boolean | OptionsUni;
  uniJson?: boolean | OptionsUniJson;
}
//#endregion
//#region src/index.d.ts
declare function uniHelper(options?: OptionsConfig & TypedFlatConfigItem, ...userConfigs: Awaitable<TypedFlatConfigItem | TypedFlatConfigItem[] | FlatConfigComposer<any, any> | Linter.Config[]>[]): FlatConfigComposer<TypedFlatConfigItem, _antfu_eslint_config0.ConfigNames>;
//#endregion
export { Awaitable, OptionsConfig, type OptionsOverrides, OptionsUni, OptionsUniJson, type TypedFlatConfigItem, uniHelper as default, uniHelper };
import type { IReactQueryMode } from './type';
export declare enum SchemaObjectFormat {
    int32 = "int32",
    int64 = "int64",
    float = "float",
    double = "double",
    byte = "byte",
    binary = "binary",
    date = "date",
    dateTime = "date-time",
    password = "password",
    base64 = "base64"
}
export declare enum SchemaObjectType {
    array = "array",
    stringArray = "string[]",
    boolean = "boolean",
    object = "object",
    number = "number",
    string = "string",
    integer = "integer",
    enum = "enum",
    null = "null",
    union = "union",
    file = "file"
}
export declare enum PriorityRule {
    include = "include",
    exclude = "exclude",
    both = "both"
}
export declare enum ReactQueryMode {
    react = "react",
    vue = "vue"
}
export declare const displayReactQueryMode: (mode: IReactQueryMode) => string;

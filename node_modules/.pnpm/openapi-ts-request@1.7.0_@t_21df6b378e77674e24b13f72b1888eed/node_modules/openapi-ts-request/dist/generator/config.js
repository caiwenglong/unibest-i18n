"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LangType = exports.lineBreakReg = exports.numberEnum = exports.parametersIn = exports.parametersInsEnum = exports.methods = exports.DEFAULT_PATH_PARAM = exports.DEFAULT_SCHEMA = exports.TypescriptFileType = exports.displayReactQueryFileName = exports.schemaFileName = exports.displayTypeLabelFileName = exports.displayEnumLabelFileName = exports.interfaceFileName = exports.serviceEntryFileName = void 0;
exports.serviceEntryFileName = 'index';
exports.interfaceFileName = 'types';
exports.displayEnumLabelFileName = 'displayEnumLabel';
exports.displayTypeLabelFileName = 'displayTypeLabel';
exports.schemaFileName = 'schema';
const displayReactQueryFileName = (reactQueryMode) => {
    return {
        react: 'reactquery',
        vue: 'vuequery',
    }[reactQueryMode];
};
exports.displayReactQueryFileName = displayReactQueryFileName;
var TypescriptFileType;
(function (TypescriptFileType) {
    TypescriptFileType["interface"] = "interface";
    TypescriptFileType["serviceController"] = "serviceController";
    TypescriptFileType["serviceIndex"] = "serviceIndex";
    TypescriptFileType["displayEnumLabel"] = "displayEnumLabel";
    TypescriptFileType["displayTypeLabel"] = "displayTypeLabel";
    TypescriptFileType["schema"] = "schema";
    TypescriptFileType["reactQuery"] = "reactQuery";
})(TypescriptFileType || (exports.TypescriptFileType = TypescriptFileType = {}));
exports.DEFAULT_SCHEMA = {
    type: 'object',
    properties: { id: { type: 'number' } },
};
exports.DEFAULT_PATH_PARAM = {
    in: 'path',
    name: null,
    schema: {
        type: 'string',
    },
    required: true,
    isObject: false,
    type: 'string',
};
var methods;
(function (methods) {
    methods["get"] = "get";
    methods["put"] = "put";
    methods["post"] = "post";
    methods["delete"] = "delete";
    methods["patch"] = "patch";
})(methods || (exports.methods = methods = {}));
// Possible values are "query", "path", "file", "header", "cookie". (https://swagger.io/specification/)
var parametersInsEnum;
(function (parametersInsEnum) {
    parametersInsEnum["query"] = "query";
    parametersInsEnum["path"] = "path";
    parametersInsEnum["cookie"] = "cookie";
    parametersInsEnum["header"] = "header";
    parametersInsEnum["file"] = "file";
})(parametersInsEnum || (exports.parametersInsEnum = parametersInsEnum = {}));
exports.parametersIn = ['query', 'path', 'cookie'];
exports.numberEnum = [
    'integer',
    'long',
    'float',
    'double',
    'number',
    'int',
    'int32',
    'int64',
];
// 匹配换行符的正则
exports.lineBreakReg = /[\r\n]+/g;
var LangType;
(function (LangType) {
    LangType["ts"] = "ts";
    LangType["js"] = "js";
})(LangType || (exports.LangType = LangType = {}));

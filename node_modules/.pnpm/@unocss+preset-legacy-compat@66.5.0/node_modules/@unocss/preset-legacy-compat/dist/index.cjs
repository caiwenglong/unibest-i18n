'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const core = require('@unocss/core');

function toCommaStyleColorFunction(str) {
  return str.replace(/((?:rgb|hsl)a?)\(([^)]+)\)/g, (_, fn, v) => {
    const [rgb, alpha] = v.split(/\//g).map((i) => i.trim());
    if (alpha && !fn.endsWith("a"))
      fn += "a";
    const parts = rgb.split(/,?\s+/).map((i) => i.trim());
    if (alpha)
      parts.push(alpha);
    return `${fn}(${parts.filter(Boolean).join(", ")})`;
  });
}

const presetLegacyCompat = core.definePreset((options = {}) => {
  const {
    commaStyleColorFunction = false,
    legacyColorSpace = false
  } = options;
  return {
    name: "@unocss/preset-legacy-compat",
    postprocess: (util) => {
      util.entries.forEach((i) => {
        let value = i[1];
        if (typeof value !== "string")
          return;
        if (commaStyleColorFunction)
          value = toCommaStyleColorFunction(value);
        if (value !== i[1])
          i[1] = value;
        if (legacyColorSpace) {
          i[1] = i[1].replace(/\s*in (oklch|oklab)/g, "");
        }
      });
    }
  };
});

exports.default = presetLegacyCompat;
exports.presetLegacyCompat = presetLegacyCompat;

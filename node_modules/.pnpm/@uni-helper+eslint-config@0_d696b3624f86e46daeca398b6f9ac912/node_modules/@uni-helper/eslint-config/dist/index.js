import { GLOB_VUE, antfu } from "@antfu/eslint-config";
import { isPackageExists } from "local-pkg";
import { FlatCompat } from "@eslint/eslintrc";

//#region src/configs/globals.ts
const compat = new FlatCompat();
function globals() {
	return compat.config({ globals: {
		dd: "readonly",
		jd: "readonly",
		ks: "readonly",
		my: "readonly",
		plus: "readonly",
		qh: "readonly",
		qq: "readonly",
		swan: "readonly",
		tt: "readonly",
		uni: "readonly",
		uniCloud: "readonly",
		weex: "readonly",
		wx: "readonly"
	} });
}

//#endregion
//#region src/configs/sortManifestJson.ts
function sortManifestJson(options = {}) {
	const { overrides = {} } = options;
	return [{
		files: ["**/manifest.json"],
		name: "uni-helper/sort-manifest-json/rules",
		rules: {
			"jsonc/sort-array-values": ["error", {
				order: { type: "asc" },
				pathPattern: "^files$"
			}],
			"jsonc/sort-keys": [
				"error",
				{
					order: [
						"name",
						"appid",
						"description",
						"locale",
						"versionName",
						"versionCode",
						"networkTimeout",
						"debug",
						"uniStatistics",
						"app-plus",
						"h5",
						"quickapp",
						"mp-weixin",
						"mp-alipay",
						"mp-baidu",
						"mp-toutiao",
						"mp-lark",
						"mp-qq",
						"mp-kuaishou"
					],
					pathPattern: "^$"
				},
				{
					order: [
						"request",
						"connectSocket",
						"uploadFile",
						"downloadFile"
					],
					pathPattern: "^networkTimeout$"
				},
				{
					order: [
						"splashscreen",
						"screenOrientation",
						"modules",
						"distribute",
						"nvueCompiler",
						"nvueStyleCompiler",
						"renderer",
						"nvueLaunchMode",
						"nvue",
						"optimization",
						"runmode",
						"uniStatistics",
						"webView"
					],
					pathPattern: "^app-plus$"
				}
			],
			...overrides
		}
	}];
}

//#endregion
//#region src/configs/sortPagesJson.ts
function sortPagesJson(options = {}) {
	const { overrides = {} } = options;
	return [{
		files: ["**/pages.json"],
		name: "uni-helper/sort-pages-json/rules",
		rules: {
			"jsonc/sort-array-values": ["error", {
				order: { type: "asc" },
				pathPattern: "^files$"
			}],
			"jsonc/sort-keys": ["error", {
				order: [
					"pages",
					"condition",
					"globalStyle",
					"tabBar",
					"easycom",
					"topWindow",
					"leftWindow",
					"rightWindow",
					"subPackages",
					"preloadRule",
					"workers",
					"uniIdRouter",
					"entryPagePath"
				],
				pathPattern: "^$"
			}],
			...overrides
		}
	}];
}

//#endregion
//#region src/configs/sortThemeJson.ts
function sortThemeJson(options = {}) {
	const { overrides = {} } = options;
	return [{
		files: ["**/theme.json"],
		name: "uni-helper/sort-theme-json/rules",
		rules: {
			"jsonc/sort-array-values": ["error", {
				order: { type: "asc" },
				pathPattern: "^files$"
			}],
			"jsonc/sort-keys": [
				"error",
				{
					order: ["light", "dark"],
					pathPattern: "^$"
				},
				{
					order: { type: "asc" },
					pathPattern: "^(light|dark)$"
				}
			],
			...overrides
		}
	}];
}

//#endregion
//#region src/configs/uni.ts
function uni(options = {}) {
	const { overrides = {} } = options;
	return [{
		files: [GLOB_VUE],
		name: "uni-helper/vue/rules",
		rules: {
			"vue/component-name-in-template-casing": "off",
			"vue/component-options-name-casing": "off",
			"vue/custom-event-name-casing": "off",
			...overrides
		}
	}];
}

//#endregion
//#region src/index.ts
function uniHelper(options = {}, ...userConfigs) {
	const { uni: enableUni = true, uniJson = true } = options;
	const ignoreManifestJSON = isPackageExists("@uni-helper/vite-plugin-uni-manifest") || uniJson === false;
	const ignorePagesJSON = isPackageExists("@uni-helper/vite-plugin-uni-pages") || uniJson === false;
	options.ignores = options.ignores || [];
	if (ignoreManifestJSON) options.ignores.push("**/manifest.json");
	else userConfigs.unshift(sortManifestJson());
	if (ignorePagesJSON) options.ignores.push("**/pages.json");
	else userConfigs.unshift(sortPagesJson());
	if (uniJson) userConfigs.unshift(sortThemeJson());
	if (enableUni) {
		options.vue = options.vue || true;
		userConfigs.unshift(uni());
	}
	userConfigs.push(globals());
	return antfu(options, ...userConfigs);
}
var src_default = uniHelper;

//#endregion
export { src_default as default, uniHelper };
import type { Dictionary } from 'lodash';
import type { IReactQueryMode, ParameterObject, SchemaObject } from '../type';
export declare const serviceEntryFileName = "index";
export declare const interfaceFileName = "types";
export declare const displayEnumLabelFileName = "displayEnumLabel";
export declare const displayTypeLabelFileName = "displayTypeLabel";
export declare const schemaFileName = "schema";
export declare const displayReactQueryFileName: (reactQueryMode: IReactQueryMode) => string;
export declare enum TypescriptFileType {
    interface = "interface",
    serviceController = "serviceController",
    serviceIndex = "serviceIndex",
    displayEnumLabel = "displayEnumLabel",
    displayTypeLabel = "displayTypeLabel",
    schema = "schema",
    reactQuery = "reactQuery"
}
export declare const DEFAULT_SCHEMA: SchemaObject;
export declare const DEFAULT_PATH_PARAM: ParameterObject & Dictionary<unknown>;
export declare enum methods {
    get = "get",
    put = "put",
    post = "post",
    delete = "delete",
    patch = "patch"
}
export declare enum parametersInsEnum {
    query = "query",
    path = "path",
    cookie = "cookie",
    header = "header",
    file = "file"
}
export declare const parametersIn: string[];
export declare const numberEnum: string[];
export declare const lineBreakReg: RegExp;
export declare enum LangType {
    ts = "ts",
    js = "js"
}
